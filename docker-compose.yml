services:
  nats: 
    image: nats:2.10.24-alpine3.21
    command: "-js"
    ports:
      - "4222:4222"
    networks:
      - faas-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4222"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - nats-js-data:/data

  apisix: 
    image: apache/apisix:3.11.0-redhat
    ports:
      - "9080:9080"
      - "9180:9180"
    volumes: 
      - ./apisix/:/usr/local/apisix/conf:rw
    networks:
      - faas-network
    environment:
      - ETCD_HOST=etcd
      - ETCD_PORT=2379
    depends_on:
      etcd:
        condition: service_healthy
      api-server:
        condition: service_started

  etcd:
    image: bitnami/etcd:3.5
    ports:
      - "2379:2379"
    volumes:
      - ./etcd:/bitnami/etcd
    networks:
      - faas-network
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 5s
      timeout: 5s
      retries: 3

  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      nats:
        condition: service_healthy
    networks:
      - faas-network
    environment:
      - REQUEST_TTL=10

  worker1:
    build:
      context: .
      dockerfile: cmd/worker/Dockerfile
    environment:
      - NATS_URL=nats://nats:4222
      - IS_WORKER=true
    depends_on:
      - nats
    networks:
      - faas-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  worker2:
    build:
      context: .
      dockerfile: cmd/worker/Dockerfile
    environment:
      - NATS_URL=nats://nats:4222
      - IS_WORKER=true
    depends_on:
      - nats
    networks:
      - faas-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

volumes:
    nats-js-data:

networks:
  faas-network:
    driver: bridge